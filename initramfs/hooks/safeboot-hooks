#!/bin/sh
# Install the safeboot tools into the initial ramdisk.
#
# This copies the /sbin/safeboot script and all of its tools,
# as well as the tpm2_unseal and direct access library
# into the initrd when `update-initramfs -u` is run.
#
# The tpm2_unseal program uses dlopen() to load the raw device
# library, so it is necessary to explicitly copy it as well.
#
# The pcscd program and openssl and all of its libraries are necessary
# for the recovery shell to be able to hash the root file system,
# generate signed kernel images, sign the PCRs, etc.
#
# This script should be copied to /etc/initramfs-tools/hooks/tpm2
# (or a symlink from there to here):
# ln -s `pwd`/initramfs-unseal-hook /etc/initramfs-tools/hooks/tpm2
#
# turn off "expressions don't expand in single quotes" and "can't follow non-constant sources"
# shellcheck disable=SC2016,SC1090,SC1091,SC2043

set -e

# A function to ignore errors if a file is already present in the initramfs
idempotent_copy () {
	copy_file "$1" "$2" "$3" || [ $? -eq 1 ]
	return 
}

if [ "$1" = "prereqs" ]; then
	exit 0
fi

. /usr/share/initramfs-tools/hook-functions

DIR="/etc/safeboot"
[ -r "$DIR/safeboot.conf" ] && . "$DIR/safeboot.conf"
[ -r "$DIR/local.conf" ] && . "$DIR/local.conf"
ls $DIR
stat "$DIR/safeboot.conf"

# Move the configuration and keys into the initrd as well
idempotent_copy safeboot "$DIR/safeboot.conf"
idempotent_copy safeboot-functions "$DIR/functions.sh"
idempotent_copy safeboot-keys "$(dirname "$CERT")/$(basename "$CERT" .pem).pub" "$DIR/cert.pub"
idempotent_copy safeboot-keys "$CERT"

if [ -r "$DIR/local.conf" ]; then
	idempotent_copy safeboot-local "$DIR/local.conf"
fi

# Programs required to unseal the secrets and decrypt the disk
copy_exec /usr/bin/sha256sum
copy_exec /usr/sbin/tpm2-totp
copy_exec /usr/sbin/tpm2
copy_exec /lib/x86_64-linux-gnu/libtss2-tcti-device.so.0
manual_add_modules nls_iso8859-1

# Things so that the recovery shell is easier to use and can
# sign/seal the root filesystem
copy_exec /bin/bash
copy_exec /usr/bin/setsid
copy_exec /usr/sbin/veritysetup
copy_exec /usr/bin/xxd /sbin/
copy_exec /usr/bin/dd
copy_exec /usr/bin/chattr
copy_exec /usr/bin/objcopy
copy_exec /bin/efibootmgr
copy_exec /sbin/safeboot
copy_exec /sbin/sbsign.safeboot
copy_exec /usr/sbin/fsck.fat
idempotent_copy efi-stub /usr/lib/systemd/boot/efi/linuxx64.efi.stub
idempotent_copy fstab /etc/fstab /etc/safeboot/fstab

# openssl has lots of dependencies to be able to talk to
# the pkcs11 smart cards
copy_exec /usr/bin/openssl
idempotent_copy opensc /etc/opensc/opensc.conf
idempotent_copy opensc /usr/lib/ssl/openssl.cnf
copy_exec /usr/lib/x86_64-linux-gnu/engines-1.1/pkcs11.so
copy_exec /usr/lib/x86_64-linux-gnu/p11-kit-proxy.so
copy_exec /lib/x86_64-linux-gnu/libffi.so.7

for dir in /usr/share/p11-kit ; do
	mkdir -p "$DESTDIR$dir"
	cp -rt "$DESTDIR$dir/.." "$dir"
done

copy_exec /usr/lib/x86_64-linux-gnu/pkcs11/p11-kit-trust.so
copy_exec /lib/x86_64-linux-gnu/libtasn1.so.6
copy_exec /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so
copy_exec /lib/x86_64-linux-gnu/libopensc.so.6
copy_exec /lib/x86_64-linux-gnu/libz.so.1
copy_exec /lib/x86_64-linux-gnu/libgio-2.0.so.0
copy_exec /lib/x86_64-linux-gnu/libgobject-2.0.so.0
copy_exec /lib/x86_64-linux-gnu/libglib-2.0.so.0
copy_exec /lib/x86_64-linux-gnu/libgmodule-2.0.so.0
copy_exec /lib/x86_64-linux-gnu/libmount.so.1
copy_exec /lib/x86_64-linux-gnu/libselinux.so.1
copy_exec /lib/x86_64-linux-gnu/libresolv.so.2
copy_exec /lib/x86_64-linux-gnu/libpcre.so.3
copy_exec /lib/x86_64-linux-gnu/libblkid.so.1
copy_exec /lib/x86_64-linux-gnu/libpcre2-8.so.0
copy_exec /lib/x86_64-linux-gnu/libpcsclite.so.1

# pcscd is required for talking to the yubikey
# and requires its own libraries to be brought along.
# HOWEVER, it should be brought by the cryptopensc hook,
# but that doesn't install for some reason. This code is copied
# from /usr/share/initramfs/hooks/cryptopensc:

# Install directories needed by smartcard reading daemon, command, and
# key-script
mkdir -p -- "$DESTDIR/etc/opensc" "$DESTDIR/usr/lib/pcsc" "$DESTDIR/var/run" "$DESTDIR/tmp"

# Install pcscd daemon, drivers, conf file
copy_exec /usr/sbin/pcscd
LIBC_DIR="$(ldd /usr/sbin/pcscd | sed -nr 's#.* => (/lib.*)/libc\.so\.[0-9.-]+ \(0x[[:xdigit:]]+\)$#\1#p')"
find -L "$LIBC_DIR" "/usr$LIBC_DIR" -maxdepth 1 \( -name 'libgcc_s.*' -o -name 'libusb-*.so*' -o -name 'libpcsclite.so*' \) -type f | while read -r so; do
    copy_exec "$so"
done

cp -rt "$DESTDIR/usr/lib" /usr/lib/pcsc
cp -t "$DESTDIR/etc" /etc/reader.conf 2>/dev/null || true
cp -t "$DESTDIR/etc" /etc/libccid_Info.plist

# Install opensc commands and conf file
copy_exec /usr/bin/opensc-tool
copy_exec /usr/bin/pkcs15-crypt
cp -t "$DESTDIR/etc/opensc" /etc/opensc/opensc.conf

